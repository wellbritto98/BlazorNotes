@using Microsoft.JSInterop
@using Blazored.Toast.Services
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject IToastService toastService


<header class="app-bar">
    <nav>
        <span>
            <ButtonComponent @onclick="GoToBlazorNotes">BlazorNotes</ButtonComponent>
        </span>
        <span>
            <ButtonComponent @onclick="GoToCalcPed" > CalcPed</ButtonComponent>
        </span>

        <span>
            <ButtonComponent @onclick="@FunctionHandler">@logoutName</ButtonComponent>
        </span>


    </nav>
</header>

@code {
    private string currentUrl { get; set; }

    [Parameter]
    public string logoutName { get; set; }


    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.Uri;
        UpdateLogoutName();
        NavigationManager.LocationChanged += HandleLocationChanged;
    }

    private void HandleLocationChanged(object sender, LocationChangedEventArgs e)
    {
        currentUrl = e.Location;
        UpdateLogoutName();
        StateHasChanged();
    }

    private void UpdateLogoutName()
    {
        if (currentUrl.Contains("/login"))
        {
            this.logoutName = "😁";
        }
        else
        {
            this.logoutName = "Sair";
        }
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= HandleLocationChanged;
    }

    public void GoToBlazorNotes(MouseEventArgs e)
    {
        NavigationManager.NavigateTo("/blazornotes");
    }
    
    public void GoToCalcPed(MouseEventArgs e)
    {
        NavigationManager.NavigateTo("/calcped");
    }

    public async Task Welcome(MouseEventArgs e)
    {
        toastService.ShowSuccess("Seja bem vindo ! Obrigado por usar o BlazorTools");
    }


    public async Task SignOut(MouseEventArgs e)
    {
        bool signOut = await JSRuntime.InvokeAsync<bool>("signOut");
        if (signOut)
        {
            toastService.ShowSuccess("Deslogado com sucesso !");
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            toastService.ShowError("Erro ao deslogar !");
        }
    }
    
    public void FunctionHandler(MouseEventArgs e)
    {
        if (currentUrl.Contains("/login"))
        {
            Welcome(e);
        }
        else
        {
            SignOut(e);
        }
    }

}