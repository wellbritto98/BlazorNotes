@page "/addcardmodal"
@inject IModalService modalService
@using System.ComponentModel.DataAnnotations
@using System.Text.Json
@using System.Text
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject IToastService toastService

<EditForm Model="@model">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-card-add">
        <label for="title-input">
            Título:
        </label>
        <InputTextCustom @bind-Value="@model.Title" id="title-input" />

        <label for="subhead-input">
            Subtítulo:
        </label>
        <InputTextCustom @bind-Value="@model.Subhead" id="subhead-input" />

        <label for="content-input">
            Conteúdo:
        </label>
        <TextAreaCustom @bind-Value="@model.Content" id="content-input" />

        <ButtonComponent @onclick="SubmitForm">Adicionar</ButtonComponent>
    </div>
</EditForm>


@code {
    // this card is to add Notes
    private CardModel model = new CardModel();
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;
    private async Task SubmitForm()
    {
        var authKey = "firebase:authUser:AIzaSyDdrz5LgykDBpxBsRf9-C59PhJ0w1Weda0:[DEFAULT]";

        // Obter o valor JSON do localStorage
        var userDataJson = await localStorage.GetItemAsStringAsync(authKey);

        // Verificar se userDataJson não é nulo ou vazio
        if (!string.IsNullOrEmpty(userDataJson))
        {
            // Parsear o userDataJson para um JsonDocument
            using var document = JsonDocument.Parse(userDataJson);
            // Obter a raiz do documento
            var root = document.RootElement;
            // Tentar obter o valor do UID
            if (root.TryGetProperty("uid", out var uidElement))
            {
                var userId = uidElement.GetString();

                // Verificar se o userId não é nulo ou vazio
                if (!string.IsNullOrEmpty(userId))
                {
                    // Restante do código para salvar a nota...
                    var baseUrl = "https://firestore.googleapis.com/v1";
                    var projectId = "blazor-notes";
                    var collectionName = "notes";
                    var documentName = "users";
                    var url = $"{baseUrl}/projects/{projectId}/databases/(default)/documents/{documentName}/{userId}/{collectionName}";

                    var card = new
                    {
                        fields = new
                        {
                            title = new { stringValue = model.Title },
                            subhead = new { stringValue = model.Subhead },
                            content = new { stringValue = model.Content }
                        }
                    };

                    var json = JsonSerializer.Serialize(card);
                    var content = new StringContent(json, Encoding.UTF8, "application/json");

                    var response = await Http.PostAsync(url, content);

                    if (response.IsSuccessStatusCode)
                    {
                        toastService.ShowSuccess("Nota adicionada com sucesso.");
                        await BlazoredModal.CloseAsync();
                    }
                    else
                    {
                        Console.WriteLine($"Falha ao adicionar a nota. Status: {response.StatusCode}");
                    }
                }
                else
                {
                    Console.WriteLine("UID do usuário não encontrado.");
                }
            }
            else
            {
                Console.WriteLine("Não foi possível encontrar a propriedade 'uid' nos dados do usuário.");
            }
        }
        else
        {
            Console.WriteLine("Dados do usuário não estão disponíveis no localStorage.");
        }
    }



    public class CardModel
    {
        [Required]
        public string Title { get; set; }

        [Required]
        public string Subhead { get; set; }

        [Required]
        public string Content { get; set; }
    }
}
