@page "/addcardmodal"
@inject IModalService modalService
@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Json
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject IToastService toastService
@using 
@inject NavigationManager _navigation
@inject IJSRuntime JSRuntime
@using Models.Home


<EditForm Model="@model">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="form-card-add">
        <label for="title-input">
            Título:
        </label>
        <InputTextCustom @bind-Value="@model.Title" id="title-input"/>

        <label for="subhead-input">
            Subtítulo:
        </label>
        <InputTextCustom @bind-Value="@model.Subhead" id="subhead-input"/>

        <label for="content-input">
            Conteúdo:
        </label>
        <TextAreaCustom @bind-Value="@model.Content" id="content-input"/>

        <ButtonComponent @onclick="SubmitForm">Adicionar</ButtonComponent>
    </div>
</EditForm>


@code {


    [Parameter]
    public EventCallback<NoteModel> OnNoteAdded { get; set; }
    
    
    

    private CardModel model = new CardModel();

    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; } = default!;

    private async Task SubmitForm()
    {
        var authKey = "firebase:authUser:AIzaSyDdrz5LgykDBpxBsRf9-C59PhJ0w1Weda0:[DEFAULT]";


  
        var userDataJson = await localStorage.GetItemAsStringAsync(authKey);


        var userId = await JSRuntime.InvokeAsync<string>("getUserUid");

   
        if (!string.IsNullOrEmpty(userId))
        {
    
            var baseUrl = "https://firestore.googleapis.com/v1";
            var projectId = "blazor-notes";
            var collectionName = "notes";
            var documentName = "users";
            var url = $"{baseUrl}/projects/{projectId}/databases/(default)/documents/{documentName}/{userId}/{collectionName}";

            var card = new
            {
                fields = new
                {
                    title = new { stringValue = model.Title },
                    subhead = new { stringValue = model.Subhead },
                    content = new { stringValue = model.Content }
                }
            };


            var json = JsonSerializer.Serialize(card);
            var content = new StringContent(json, Encoding.UTF8, "application/json");

            var response = await Http.PostAsync(url, content);

            if (response.IsSuccessStatusCode)
            {
                var responseJson = await response.Content.ReadAsStringAsync();
                var responseDocument = JsonDocument.Parse(responseJson);
                var newNote = new NoteModel
                {
                    NoteId = responseDocument.RootElement.GetProperty("name").GetString().Split('/').Last(),
                    Title = model.Title,
                    Subhead = model.Subhead,
                    Content = model.Content
                };
                toastService.ShowSuccess("Nota adicionada com sucesso.");
                await OnNoteAdded.InvokeAsync(newNote);
                await BlazoredModal.CloseAsync();
                
            
                
                
            }
            else
            {
                Console.WriteLine($"Falha ao adicionar a nota. Status: {response.StatusCode}");
            }
        }
        else
        {
            Console.WriteLine("UID do usuário não encontrado.");
        }
    }

    public class CardModel
    {
        [Required]
        public string Title { get; set; }

        [Required]
        public string Subhead { get; set; }

        [Required]
        public string Content { get; set; }
    }

}